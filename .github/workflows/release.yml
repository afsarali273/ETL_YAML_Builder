name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npx electron-builder --win --publish=never
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npx electron-builder --mac --publish=never
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
      
      - name: Remove quarantine from macOS app
        if: matrix.os == 'macos-latest'
        run: |
          find release -name "*.app" -exec xattr -cr {} \;
          find release -name "*.dmg" -exec xattr -cr {} \;
          find release -name "*.zip" -exec xattr -cr {} \;

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: release/*.exe

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: |
            release/*.dmg
            release/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: ./windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-installer
          path: ./macos

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./windows/*.exe
            ./macos/*.dmg
            ./macos/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}